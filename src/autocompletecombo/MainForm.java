/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package autocompletecombo;

import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;

/**
 *
 * @author Noman
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    JTextField txtField;
    Model[] data = getDataList();

    public MainForm() {
        initComponents();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int w = (int) d.getWidth();
        int h = (int) d.getHeight();
        setSize(680, 600);
        setLocation(w / 2 - 340, h / 2 - 300);
        
        cmbSearch.setToolTipText("Search By Name or Phone Number");

        //////Auto Suggest
        txtField = (JTextField) cmbSearch.getEditor().getEditorComponent();
        txtField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                EventQueue.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        String text = txtField.getText();
                        if (text.length() == 0) {
                            cmbSearch.hidePopup();
                            setModel(getSuggestedModel(data, ""), "");
                        } else {
                            CustomComboBoxModel m = getSuggestedModel(data, text);
                            if (m.getSize() == 0 || hide_flag) {
                                cmbSearch.hidePopup();
                                hide_flag = false;
                            } else {
                                setModel(m, text);
                                cmbSearch.showPopup();
                            }
                        }
                    }
                });
            }

            @Override
            public void keyPressed(KeyEvent e) {
                String text = txtField.getText();
                int code = e.getKeyCode();
                if (code == KeyEvent.VK_ENTER) {
                    hide_flag = true;
                } else if (code == KeyEvent.VK_ESCAPE) {
                    hide_flag = true;
                } else if (code == KeyEvent.VK_RIGHT) {
                    for (int i = 0; i < data.length; i++) {
                        String str = data[i].getName() + "";
                        if (str.startsWith(text)) {
                            cmbSearch.setSelectedIndex(-1);
                            txtField.setText(str);
                            return;
                        }
                    }
                }
            }
        });

        setModel(new CustomComboBoxModel(data), "");
    }
    private boolean hide_flag = false;

    private void setModel(CustomComboBoxModel mdl, String str) {
        cmbSearch.setModel(mdl);
        cmbSearch.setSelectedIndex(-1);
        txtField.setText(str);
    }

    private CustomComboBoxModel getSuggestedModel(Model[] list, String text) {
        CustomComboBoxModel cmbModel = new CustomComboBoxModel();
        cmbModel.removeAllElements();
        for (Model model : list) {
            if (model.getName().toLowerCase().contains(text.trim().toLowerCase()) || model.getId().contains(text.trim())) {
                cmbModel.addElement(model);
            }
        }
        return cmbModel;
    }

    private Model[] getDataList() {
        List<Model> list = new ArrayList<>();

        list.add(new Model("1", "Bike"));
        list.add(new Model("2", "car"));
        list.add(new Model("3", "cap"));
        list.add(new Model("4", "cape"));
        list.add(new Model("5", "canadian"));
        list.add(new Model("6", "caprecious"));
        list.add(new Model("7", "catepult"));

        return list.toArray(new Model[list.size()]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmbSearch = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbSearch.setEditable(true);
        cmbSearch.setToolTipText("Name, Phone Number");
        cmbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(cmbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(cmbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(190, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchActionPerformed
        Model selectedModel = (Model) cmbSearch.getSelectedItem();
        if (selectedModel == null) {
            return;
        }
        System.out.println("selctedModel => ID: " + selectedModel.getId() + " Name: " + selectedModel.getName());
    }//GEN-LAST:event_cmbSearchActionPerformed

    class CustomComboBoxModel extends DefaultComboBoxModel<Model> {

        public CustomComboBoxModel() {
        }

        public CustomComboBoxModel(Model[] items) {
            super(items);
        }

        @Override
        public Model getSelectedItem() {
            try{
                Model model = (Model) super.getSelectedItem();
                return model;
            }catch(ClassCastException e){
                return null;
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbSearch;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
